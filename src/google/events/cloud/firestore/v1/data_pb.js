// source: google/events/cloud/firestore/v1/data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_type_latlng_pb = require('../../../../../google/type/latlng_pb.js');
goog.object.extend(proto, google_type_latlng_pb);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.ArrayValue', null, global);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.Document', null, global);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.DocumentEventData', null, global);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.DocumentMask', null, global);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.MapValue', null, global);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.Value', null, global);
goog.exportSymbol('proto.google.events.cloud.firestore.v1.Value.ValueTypeCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.events.cloud.firestore.v1.DocumentEventData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.events.cloud.firestore.v1.DocumentEventData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.events.cloud.firestore.v1.DocumentEventData.displayName = 'proto.google.events.cloud.firestore.v1.DocumentEventData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.events.cloud.firestore.v1.DocumentMask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.events.cloud.firestore.v1.DocumentMask.repeatedFields_, null);
};
goog.inherits(proto.google.events.cloud.firestore.v1.DocumentMask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.events.cloud.firestore.v1.DocumentMask.displayName = 'proto.google.events.cloud.firestore.v1.DocumentMask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.events.cloud.firestore.v1.Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.events.cloud.firestore.v1.Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.events.cloud.firestore.v1.Document.displayName = 'proto.google.events.cloud.firestore.v1.Document';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.events.cloud.firestore.v1.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.events.cloud.firestore.v1.Value.oneofGroups_);
};
goog.inherits(proto.google.events.cloud.firestore.v1.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.events.cloud.firestore.v1.Value.displayName = 'proto.google.events.cloud.firestore.v1.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.events.cloud.firestore.v1.ArrayValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.events.cloud.firestore.v1.ArrayValue.repeatedFields_, null);
};
goog.inherits(proto.google.events.cloud.firestore.v1.ArrayValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.events.cloud.firestore.v1.ArrayValue.displayName = 'proto.google.events.cloud.firestore.v1.ArrayValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.events.cloud.firestore.v1.MapValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.events.cloud.firestore.v1.MapValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.events.cloud.firestore.v1.MapValue.displayName = 'proto.google.events.cloud.firestore.v1.MapValue';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.toObject = function(opt_includeInstance) {
  return proto.google.events.cloud.firestore.v1.DocumentEventData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.events.cloud.firestore.v1.DocumentEventData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.google.events.cloud.firestore.v1.Document.toObject(includeInstance, f),
    oldValue: (f = msg.getOldValue()) && proto.google.events.cloud.firestore.v1.Document.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && proto.google.events.cloud.firestore.v1.DocumentMask.toObject(includeInstance, f),
    wildcardsMap: (f = msg.getWildcardsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.events.cloud.firestore.v1.DocumentEventData;
  return proto.google.events.cloud.firestore.v1.DocumentEventData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.events.cloud.firestore.v1.DocumentEventData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.events.cloud.firestore.v1.Document;
      reader.readMessage(value,proto.google.events.cloud.firestore.v1.Document.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new proto.google.events.cloud.firestore.v1.Document;
      reader.readMessage(value,proto.google.events.cloud.firestore.v1.Document.deserializeBinaryFromReader);
      msg.setOldValue(value);
      break;
    case 3:
      var value = new proto.google.events.cloud.firestore.v1.DocumentMask;
      reader.readMessage(value,proto.google.events.cloud.firestore.v1.DocumentMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 4:
      var value = msg.getWildcardsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.events.cloud.firestore.v1.DocumentEventData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.events.cloud.firestore.v1.DocumentEventData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.events.cloud.firestore.v1.Document.serializeBinaryToWriter
    );
  }
  f = message.getOldValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.events.cloud.firestore.v1.Document.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.events.cloud.firestore.v1.DocumentMask.serializeBinaryToWriter
    );
  }
  f = message.getWildcardsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Document value = 1;
 * @return {?proto.google.events.cloud.firestore.v1.Document}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.getValue = function() {
  return /** @type{?proto.google.events.cloud.firestore.v1.Document} */ (
    jspb.Message.getWrapperField(this, proto.google.events.cloud.firestore.v1.Document, 1));
};


/**
 * @param {?proto.google.events.cloud.firestore.v1.Document|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
*/
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Document old_value = 2;
 * @return {?proto.google.events.cloud.firestore.v1.Document}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.getOldValue = function() {
  return /** @type{?proto.google.events.cloud.firestore.v1.Document} */ (
    jspb.Message.getWrapperField(this, proto.google.events.cloud.firestore.v1.Document, 2));
};


/**
 * @param {?proto.google.events.cloud.firestore.v1.Document|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
*/
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.setOldValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.clearOldValue = function() {
  return this.setOldValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.hasOldValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DocumentMask update_mask = 3;
 * @return {?proto.google.events.cloud.firestore.v1.DocumentMask}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.events.cloud.firestore.v1.DocumentMask} */ (
    jspb.Message.getWrapperField(this, proto.google.events.cloud.firestore.v1.DocumentMask, 3));
};


/**
 * @param {?proto.google.events.cloud.firestore.v1.DocumentMask|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
*/
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> wildcards = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.getWildcardsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentEventData} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentEventData.prototype.clearWildcardsMap = function() {
  this.getWildcardsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.events.cloud.firestore.v1.DocumentMask.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.events.cloud.firestore.v1.DocumentMask.prototype.toObject = function(opt_includeInstance) {
  return proto.google.events.cloud.firestore.v1.DocumentMask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.events.cloud.firestore.v1.DocumentMask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.DocumentMask.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldPathsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentMask}
 */
proto.google.events.cloud.firestore.v1.DocumentMask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.events.cloud.firestore.v1.DocumentMask;
  return proto.google.events.cloud.firestore.v1.DocumentMask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.events.cloud.firestore.v1.DocumentMask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentMask}
 */
proto.google.events.cloud.firestore.v1.DocumentMask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.DocumentMask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.events.cloud.firestore.v1.DocumentMask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.events.cloud.firestore.v1.DocumentMask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.DocumentMask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldPathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string field_paths = 1;
 * @return {!Array<string>}
 */
proto.google.events.cloud.firestore.v1.DocumentMask.prototype.getFieldPathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.events.cloud.firestore.v1.DocumentMask} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentMask.prototype.setFieldPathsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.events.cloud.firestore.v1.DocumentMask} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentMask.prototype.addFieldPaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.events.cloud.firestore.v1.DocumentMask} returns this
 */
proto.google.events.cloud.firestore.v1.DocumentMask.prototype.clearFieldPathsList = function() {
  return this.setFieldPathsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.toObject = function(opt_includeInstance) {
  return proto.google.events.cloud.firestore.v1.Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.events.cloud.firestore.v1.Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.google.events.cloud.firestore.v1.Value.toObject) : [],
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateTime: (f = msg.getUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.events.cloud.firestore.v1.Document}
 */
proto.google.events.cloud.firestore.v1.Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.events.cloud.firestore.v1.Document;
  return proto.google.events.cloud.firestore.v1.Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.events.cloud.firestore.v1.Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.events.cloud.firestore.v1.Document}
 */
proto.google.events.cloud.firestore.v1.Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.events.cloud.firestore.v1.Value.deserializeBinaryFromReader, "", new proto.google.events.cloud.firestore.v1.Value());
         });
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.events.cloud.firestore.v1.Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.events.cloud.firestore.v1.Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.events.cloud.firestore.v1.Value.serializeBinaryToWriter);
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.events.cloud.firestore.v1.Document} returns this
 */
proto.google.events.cloud.firestore.v1.Document.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, Value> fields = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.events.cloud.firestore.v1.Value>}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.events.cloud.firestore.v1.Value>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.events.cloud.firestore.v1.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.events.cloud.firestore.v1.Document} returns this
 */
proto.google.events.cloud.firestore.v1.Document.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};


/**
 * optional google.protobuf.Timestamp create_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.Document} returns this
*/
proto.google.events.cloud.firestore.v1.Document.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Document} returns this
 */
proto.google.events.cloud.firestore.v1.Document.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp update_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.getUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.Document} returns this
*/
proto.google.events.cloud.firestore.v1.Document.prototype.setUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Document} returns this
 */
proto.google.events.cloud.firestore.v1.Document.prototype.clearUpdateTime = function() {
  return this.setUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Document.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.events.cloud.firestore.v1.Value.oneofGroups_ = [[11,1,2,3,10,17,18,5,8,9,6]];

/**
 * @enum {number}
 */
proto.google.events.cloud.firestore.v1.Value.ValueTypeCase = {
  VALUE_TYPE_NOT_SET: 0,
  NULL_VALUE: 11,
  BOOLEAN_VALUE: 1,
  INTEGER_VALUE: 2,
  DOUBLE_VALUE: 3,
  TIMESTAMP_VALUE: 10,
  STRING_VALUE: 17,
  BYTES_VALUE: 18,
  REFERENCE_VALUE: 5,
  GEO_POINT_VALUE: 8,
  ARRAY_VALUE: 9,
  MAP_VALUE: 6
};

/**
 * @return {proto.google.events.cloud.firestore.v1.Value.ValueTypeCase}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getValueTypeCase = function() {
  return /** @type {proto.google.events.cloud.firestore.v1.Value.ValueTypeCase} */(jspb.Message.computeOneofCase(this, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.google.events.cloud.firestore.v1.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.events.cloud.firestore.v1.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    nullValue: jspb.Message.getFieldWithDefault(msg, 11, 0),
    booleanValue: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    integerValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    timestampValue: (f = msg.getTimestampValue()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stringValue: jspb.Message.getFieldWithDefault(msg, 17, ""),
    bytesValue: msg.getBytesValue_asB64(),
    referenceValue: jspb.Message.getFieldWithDefault(msg, 5, ""),
    geoPointValue: (f = msg.getGeoPointValue()) && google_type_latlng_pb.LatLng.toObject(includeInstance, f),
    arrayValue: (f = msg.getArrayValue()) && proto.google.events.cloud.firestore.v1.ArrayValue.toObject(includeInstance, f),
    mapValue: (f = msg.getMapValue()) && proto.google.events.cloud.firestore.v1.MapValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.events.cloud.firestore.v1.Value}
 */
proto.google.events.cloud.firestore.v1.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.events.cloud.firestore.v1.Value;
  return proto.google.events.cloud.firestore.v1.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.events.cloud.firestore.v1.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.events.cloud.firestore.v1.Value}
 */
proto.google.events.cloud.firestore.v1.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {!proto.google.protobuf.NullValue} */ (reader.readEnum());
      msg.setNullValue(value);
      break;
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBooleanValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntegerValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampValue(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 18:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceValue(value);
      break;
    case 8:
      var value = new google_type_latlng_pb.LatLng;
      reader.readMessage(value,google_type_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setGeoPointValue(value);
      break;
    case 9:
      var value = new proto.google.events.cloud.firestore.v1.ArrayValue;
      reader.readMessage(value,proto.google.events.cloud.firestore.v1.ArrayValue.deserializeBinaryFromReader);
      msg.setArrayValue(value);
      break;
    case 6:
      var value = new proto.google.events.cloud.firestore.v1.MapValue;
      reader.readMessage(value,proto.google.events.cloud.firestore.v1.MapValue.deserializeBinaryFromReader);
      msg.setMapValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.events.cloud.firestore.v1.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.events.cloud.firestore.v1.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.google.protobuf.NullValue} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTimestampValue();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBytes(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGeoPointValue();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_type_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
  f = message.getArrayValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.google.events.cloud.firestore.v1.ArrayValue.serializeBinaryToWriter
    );
  }
  f = message.getMapValue();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.events.cloud.firestore.v1.MapValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.NullValue null_value = 11;
 * @return {!proto.google.protobuf.NullValue}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getNullValue = function() {
  return /** @type {!proto.google.protobuf.NullValue} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.google.protobuf.NullValue} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setNullValue = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearNullValue = function() {
  return jspb.Message.setOneofField(this, 11, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasNullValue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool boolean_value = 1;
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getBooleanValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setBooleanValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearBooleanValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasBooleanValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 integer_value = 2;
 * @return {number}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getIntegerValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setIntegerValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearIntegerValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasIntegerValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double double_value = 3;
 * @return {number}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_value = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getTimestampValue = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
*/
proto.google.events.cloud.firestore.v1.Value.prototype.setTimestampValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearTimestampValue = function() {
  return this.setTimestampValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasTimestampValue = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string string_value = 17;
 * @return {string}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 17, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bytes bytes_value = 18;
 * @return {!(string|Uint8Array)}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getBytesValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * optional bytes bytes_value = 18;
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {string}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getBytesValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesValue()));
};


/**
 * optional bytes bytes_value = 18;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getBytesValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofField(this, 18, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearBytesValue = function() {
  return jspb.Message.setOneofField(this, 18, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string reference_value = 5;
 * @return {string}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getReferenceValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.setReferenceValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearReferenceValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.type.LatLng geo_point_value = 8;
 * @return {?proto.google.type.LatLng}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getGeoPointValue = function() {
  return /** @type{?proto.google.type.LatLng} */ (
    jspb.Message.getWrapperField(this, google_type_latlng_pb.LatLng, 8));
};


/**
 * @param {?proto.google.type.LatLng|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
*/
proto.google.events.cloud.firestore.v1.Value.prototype.setGeoPointValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearGeoPointValue = function() {
  return this.setGeoPointValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasGeoPointValue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ArrayValue array_value = 9;
 * @return {?proto.google.events.cloud.firestore.v1.ArrayValue}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getArrayValue = function() {
  return /** @type{?proto.google.events.cloud.firestore.v1.ArrayValue} */ (
    jspb.Message.getWrapperField(this, proto.google.events.cloud.firestore.v1.ArrayValue, 9));
};


/**
 * @param {?proto.google.events.cloud.firestore.v1.ArrayValue|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
*/
proto.google.events.cloud.firestore.v1.Value.prototype.setArrayValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearArrayValue = function() {
  return this.setArrayValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasArrayValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional MapValue map_value = 6;
 * @return {?proto.google.events.cloud.firestore.v1.MapValue}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.getMapValue = function() {
  return /** @type{?proto.google.events.cloud.firestore.v1.MapValue} */ (
    jspb.Message.getWrapperField(this, proto.google.events.cloud.firestore.v1.MapValue, 6));
};


/**
 * @param {?proto.google.events.cloud.firestore.v1.MapValue|undefined} value
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
*/
proto.google.events.cloud.firestore.v1.Value.prototype.setMapValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.google.events.cloud.firestore.v1.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.events.cloud.firestore.v1.Value} returns this
 */
proto.google.events.cloud.firestore.v1.Value.prototype.clearMapValue = function() {
  return this.setMapValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.events.cloud.firestore.v1.Value.prototype.hasMapValue = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.events.cloud.firestore.v1.ArrayValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.events.cloud.firestore.v1.ArrayValue.prototype.toObject = function(opt_includeInstance) {
  return proto.google.events.cloud.firestore.v1.ArrayValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.events.cloud.firestore.v1.ArrayValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.ArrayValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.google.events.cloud.firestore.v1.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.events.cloud.firestore.v1.ArrayValue}
 */
proto.google.events.cloud.firestore.v1.ArrayValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.events.cloud.firestore.v1.ArrayValue;
  return proto.google.events.cloud.firestore.v1.ArrayValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.events.cloud.firestore.v1.ArrayValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.events.cloud.firestore.v1.ArrayValue}
 */
proto.google.events.cloud.firestore.v1.ArrayValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.events.cloud.firestore.v1.Value;
      reader.readMessage(value,proto.google.events.cloud.firestore.v1.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.ArrayValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.events.cloud.firestore.v1.ArrayValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.events.cloud.firestore.v1.ArrayValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.ArrayValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.events.cloud.firestore.v1.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Value values = 1;
 * @return {!Array<!proto.google.events.cloud.firestore.v1.Value>}
 */
proto.google.events.cloud.firestore.v1.ArrayValue.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.events.cloud.firestore.v1.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.events.cloud.firestore.v1.Value, 1));
};


/**
 * @param {!Array<!proto.google.events.cloud.firestore.v1.Value>} value
 * @return {!proto.google.events.cloud.firestore.v1.ArrayValue} returns this
*/
proto.google.events.cloud.firestore.v1.ArrayValue.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.events.cloud.firestore.v1.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.events.cloud.firestore.v1.Value}
 */
proto.google.events.cloud.firestore.v1.ArrayValue.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.events.cloud.firestore.v1.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.events.cloud.firestore.v1.ArrayValue} returns this
 */
proto.google.events.cloud.firestore.v1.ArrayValue.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.events.cloud.firestore.v1.MapValue.prototype.toObject = function(opt_includeInstance) {
  return proto.google.events.cloud.firestore.v1.MapValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.events.cloud.firestore.v1.MapValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.MapValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.google.events.cloud.firestore.v1.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.events.cloud.firestore.v1.MapValue}
 */
proto.google.events.cloud.firestore.v1.MapValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.events.cloud.firestore.v1.MapValue;
  return proto.google.events.cloud.firestore.v1.MapValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.events.cloud.firestore.v1.MapValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.events.cloud.firestore.v1.MapValue}
 */
proto.google.events.cloud.firestore.v1.MapValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.events.cloud.firestore.v1.Value.deserializeBinaryFromReader, "", new proto.google.events.cloud.firestore.v1.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.events.cloud.firestore.v1.MapValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.events.cloud.firestore.v1.MapValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.events.cloud.firestore.v1.MapValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.events.cloud.firestore.v1.MapValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.events.cloud.firestore.v1.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, Value> fields = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.events.cloud.firestore.v1.Value>}
 */
proto.google.events.cloud.firestore.v1.MapValue.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.events.cloud.firestore.v1.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.google.events.cloud.firestore.v1.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.google.events.cloud.firestore.v1.MapValue} returns this
 */
proto.google.events.cloud.firestore.v1.MapValue.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};


goog.object.extend(exports, proto.google.events.cloud.firestore.v1);
